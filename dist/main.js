!function(Q){var U={};function F(B){if(U[B])return U[B].exports;var s=U[B]={i:B,l:!1,exports:{}};return Q[B].call(s.exports,s,s.exports,F),s.l=!0,s.exports}F.m=Q,F.c=U,F.d=function(Q,U,B){F.o(Q,U)||Object.defineProperty(Q,U,{enumerable:!0,get:B})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,U){if(1&U&&(Q=F(Q)),8&U)return Q;if(4&U&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(F.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&U&&"string"!=typeof Q)for(var s in Q)F.d(B,s,function(U){return Q[U]}.bind(null,s));return B},F.n=function(Q){var U=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(U,"a",U),U},F.o=function(Q,U){return Object.prototype.hasOwnProperty.call(Q,U)},F.p="",F(F.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/scaleManager.js\nclass ScaleManager {\r\n    constructor(canvas, isMobile) {\r\n        this.canvas = canvas;\r\n        this.mobile = isMobile;\r\n\r\n        window.addEventListener(\'resize\', () => {\r\n            this.resize(this.canvas);\r\n\r\n            if (this.mobile) {\r\n                if (window.innerWidth < window.innerHeight) {\r\n                    this.leaveIncorrectOrientation();\r\n                } else {\r\n                    this.enterIncorrectOrientation();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.resize(this.canvas);\r\n    }\r\n\r\n    resize(canvas) {\r\n        let scale = Math.min(window.innerWidth / canvas.width, window.innerHeight / canvas.height);\r\n        let orientation = \'left\';\r\n        let extra = (this.mobile) ? \'margin-left: -50%\': \'\';\r\n        let margin = window.innerWidth / 2 - (canvas.width / 2) * scale;\r\n\r\n        canvas.setAttribute(\'style\', \'-ms-transform-origin: \' + orientation + \' top; -webkit-transform-origin: \' + orientation + \' top;\' +\r\n            \' -moz-transform-origin: \' + orientation + \' top; -o-transform-origin: \' + orientation + \' top; transform-origin: \' + orientation + \' top;\' +\r\n            \' -ms-transform: scale(\' + scale + \'); -webkit-transform: scale3d(\' + scale + \', 1);\' +\r\n            \' -moz-transform: scale(\' + scale + \'); -o-transform: scale(\' + scale + \'); transform: scale(\' + scale + \');\' +\r\n            \' display: block; margin-left: \' + margin + \'px;\'\r\n        );\r\n    }\r\n\r\n    enterIncorrectOrientation() {\r\n        document.getElementById("orientation").style.display = "block";\r\n        document.getElementById("content").style.display = "none";\r\n    }\r\n\r\n    leaveIncorrectOrientation() {\r\n        document.getElementById("orientation").style.display = "none";\r\n        document.getElementById("content").style.display = "block";\r\n    }\r\n}\r\n/* harmony default export */ var scaleManager = (ScaleManager);\n// CONCATENATED MODULE: ./src/helpers.ts\n/* harmony default export */ var helpers = ({\r\n    lerp: function (value1, value2, amount) {\r\n        amount = amount < 0 ? 0 : amount;\r\n        amount = amount > 1 ? 1 : amount;\r\n        return value1 + (value2 - value1) * amount;\r\n    },\r\n    dist: function (g1, g2) {\r\n        return Math.sqrt(Math.pow(g1.y - g2.y, 2) + Math.pow(g1.x - g2.x, 2));\r\n    },\r\n    clamp: function (min, max, v) {\r\n        return Math.min(Math.max(v, min), v);\r\n    }\r\n});\r\n\n// CONCATENATED MODULE: ./src/entities/BattleEntity.ts\nvar BattleStats = /** @class */ (function () {\r\n    function BattleStats() {\r\n        this.hp = 100;\r\n    }\r\n    return BattleStats;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Player/overworld.ts\n\r\n/* harmony default export */ var overworld = ({\r\n    preUpdate: function (player) {\r\n        var dx = 0;\r\n        var dy = 0;\r\n        if (!player.info.isCom) {\r\n            if (player.left.isDown)\r\n                dx = -1;\r\n            else if (player.right.isDown)\r\n                dx = 1;\r\n            if (player.up.isDown)\r\n                dy = -1;\r\n            else if (player.down.isDown)\r\n                dy = 1;\r\n        }\r\n        else {\r\n            var distToFollow = player.distToFollow;\r\n            if (!player.followMove && distToFollow > 60) {\r\n                player.followMove = true;\r\n            }\r\n            else if (!player.info.following.flying && player.followMove && distToFollow < 40) {\r\n                player.followMove = false;\r\n            }\r\n            if (player.followMove) {\r\n                dx = player.info.following.container.x - player.container.x;\r\n                dy = player.info.following.container.y - player.container.y;\r\n            }\r\n        }\r\n        this.move(dx, dy);\r\n    },\r\n    move: function (player, dx, dy) {\r\n        dx = helpers.clamp(-1, 1, dx);\r\n        dy = helpers.clamp(-1, 1, dy);\r\n        if (dx == 0 && dy == 0) {\r\n            player.targetAngle = 0;\r\n            player.flying = false;\r\n            return;\r\n        }\r\n        player.flying = true;\r\n        if (dx > 0)\r\n            player.targetAngle = 1;\r\n        else if (dx < 0)\r\n            player.targetAngle = -1;\r\n        else\r\n            player.targetAngle = 0;\r\n        var theta = Math.atan2(dy, dx);\r\n        var f = 3;\r\n        if (player.info.isCom)\r\n            f *= 0.92;\r\n        if (player.info.isCom && player.distToFollow < 30)\r\n            f *= 0.7;\r\n        player.container.x += Math.cos(theta) * f;\r\n        player.container.y += Math.sin(theta) * f;\r\n    }\r\n});\r\n\n// CONCATENATED MODULE: ./src/entities/Player.ts\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\nvar Player_Player = /** @class */ (function (_super) {\r\n    __extends(Player, _super);\r\n    function Player(scene, info) {\r\n        var _this = _super.call(this, scene, 0, 0, info.key) || this;\r\n        _this.info = info;\r\n        _this.stats = new BattleStats();\r\n        scene.anims.create({\r\n            key: "hover_flame",\r\n            frames: scene.anims.generateFrameNumbers("hover_flame", { start: 0, end: 40, }),\r\n            frameRate: 60,\r\n            repeat: -1\r\n        });\r\n        _this.scene = scene;\r\n        _this.shadow = scene.add.sprite(0, 0, "shadow");\r\n        _this.container = scene.add.container(300, 300);\r\n        if (_this.info.key)\r\n            _this.container.depth = 100 - _this.info.partyIdx;\r\n        scene.add.existing(_this);\r\n        _this.boostFlame = scene.add.sprite(0, 0, "hover_flame");\r\n        _this.boostFlame.anims.play("hover_flame");\r\n        _this.container.add([\r\n            _this,\r\n            _this.boostFlame,\r\n        ]);\r\n        if (!_this.info.isCom) {\r\n            _this.up = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.UP);\r\n            _this.down = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN);\r\n            _this.left = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT);\r\n            _this.right = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT);\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Player.prototype, "ax", {\r\n        get: function () { return this.container.x; },\r\n        set: function (v) { this.container.x = v; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Player.prototype, "ay", {\r\n        get: function () { return this.container.y; },\r\n        set: function (v) { this.container.y = v; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Player.prototype, "distToFollow", {\r\n        get: function () {\r\n            return helpers.dist(this.container, this.info.following.container);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Player.prototype.preUpdate = function (t, delta) {\r\n        _super.prototype.preUpdate.call(this, t, delta);\r\n        this.shadow.x = this.container.x;\r\n        this.shadow.y = this.container.y;\r\n        this.boostFlame.x = this.x + 2;\r\n        this.boostFlame.y = this.y + 24;\r\n        if (this.stats.inBattle) {\r\n            overworld.preUpdate(this);\r\n        }\r\n        this.container.angle = helpers.lerp(this.container.angle, this.targetAngle * 20, 0.15);\r\n        if (Math.abs(this.container.angle) < 3 && this.targetAngle == 0)\r\n            this.container.angle = 0;\r\n        this.boostFlame.alpha = 0;\r\n        this.y = helpers.lerp(this.y, this.flying ?\r\n            -10 + Math.sin(this.scene.time.now * 0.01) * 5\r\n            :\r\n                0, 0.15);\r\n    };\r\n    return Player;\r\n}(Phaser.GameObjects.Sprite));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Enemy.ts\nvar Enemy_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Enemy_Enemy = /** @class */ (function (_super) {\r\n    Enemy_extends(Enemy, _super);\r\n    function Enemy(scene, x, y, info) {\r\n        var _this = _super.call(this, scene, x, y, info.key) || this;\r\n        _this.info = info;\r\n        _this.stats = new BattleStats();\r\n        _this.scene = scene;\r\n        scene.add.existing(_this);\r\n        _this.depth = 50;\r\n        _this.anims.play(info.key + "_idle");\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Enemy.prototype, "ax", {\r\n        get: function () { return this.x; },\r\n        set: function (v) { this.x = v; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Enemy.prototype, "ay", {\r\n        get: function () { return this.y; },\r\n        set: function (v) { this.y = v; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Enemy.prototype.preUpdate = function (t, delta) {\r\n        _super.prototype.preUpdate.call(this, t, delta);\r\n    };\r\n    return Enemy;\r\n}(Phaser.GameObjects.Sprite));\r\n\r\n\n// CONCATENATED MODULE: ./src/scenes/MainScene.ts\nvar MainScene_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\nvar MainScene_MainScene = /** @class */ (function (_super) {\r\n    MainScene_extends(MainScene, _super);\r\n    function MainScene() {\r\n        return _super.call(this, {\r\n            key: "MainScene"\r\n        }) || this;\r\n    }\r\n    MainScene.prototype.preload = function () {\r\n        this.load.image("bg", "/assets/bg.png");\r\n        this.load.image("shadow", "/assets/shadow.png");\r\n        this.load.image("octocat1", "/assets/octocat.png");\r\n        this.load.image("octocat2", "/assets/octocat2.png");\r\n        this.load.image("octocat3", "/assets/octocat3.png");\r\n        this.load.spritesheet("hover_flame", "/assets/hover_flame.png", {\r\n            startFrame: 0,\r\n            endFrame: 40,\r\n            frameWidth: 100,\r\n            frameHeight: 100\r\n        });\r\n        this.load.spritesheet("slime1", "/assets/slime1.png", {\r\n            startFrame: 0,\r\n            endFrame: 7,\r\n            frameWidth: 40,\r\n            frameHeight: 40\r\n        });\r\n        this.load.image("tiles", "/assets/tilemap.png");\r\n        this.load.tilemapTiledJSON("level1", "/assets/levels/level1.json");\r\n    };\r\n    MainScene.prototype.create = function () {\r\n        this.anims.create({\r\n            key: "slime1_idle",\r\n            frames: this.anims.generateFrameNumbers("slime1", { start: 0, end: 3 }),\r\n            yoyo: true,\r\n            frameRate: 8,\r\n            repeat: -1\r\n        });\r\n        var map = this.make.tilemap({\r\n            key: "level1",\r\n            tileWidth: 20,\r\n            tileHeight: 20\r\n        });\r\n        var tilesetImg = map.addTilesetImage("tilemap", "tiles");\r\n        for (var i = 0; i < map.layers.length; i++) {\r\n            var layer = map.layers[0];\r\n            map.createStaticLayer(i, tilesetImg, layer.x, layer.y);\r\n        }\r\n        this.cameras.main.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\r\n        this.player = new Player_Player(this, { isCom: false, key: "octocat1", partyIdx: 0 });\r\n        var player2 = new Player_Player(this, { isCom: true, key: "octocat2", following: this.player, partyIdx: 1 });\r\n        var player3 = new Player_Player(this, { isCom: true, key: "octocat3", following: player2, partyIdx: 2 });\r\n        this.party = [this.player, player2, player3];\r\n        this.cameras.main.startFollow(this.player.container);\r\n        var e = new Enemy_Enemy(this, 450, 650, {\r\n            key: "slime1",\r\n        });\r\n        this.enemies = [e];\r\n    };\r\n    MainScene.prototype.update = function () {\r\n        for (var _i = 0, _a = this.enemies; _i < _a.length; _i++) {\r\n            var e = _a[_i];\r\n            if (helpers.dist(this.player.container, e) < 90) {\r\n                console.log("battle start");\r\n            }\r\n        }\r\n    };\r\n    return MainScene;\r\n}(Phaser.Scene));\r\n\r\n\n// CONCATENATED MODULE: ./src/RockRacingGame.ts\n\r\n\r\nvar RockRacingGame_RockRacingGame = /** @class */ (function () {\r\n    function RockRacingGame() {\r\n        var _this = this;\r\n        this._game = new Phaser.Game({\r\n            width: 960,\r\n            height: 540,\r\n            type: Phaser.AUTO,\r\n            zoom: 2,\r\n            render: {\r\n                pixelArt: true,\r\n            },\r\n            scene: MainScene_MainScene,\r\n            physics: {\r\n                default: "matter",\r\n                matter: {\r\n                    debug: true\r\n                }\r\n            },\r\n            callbacks: {\r\n                postBoot: function () {\r\n                    new scaleManager(_this._game.canvas, !_this._game.device.os.desktop);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return RockRacingGame;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/index.ts\n\r\nvar g = new RockRacingGame_RockRacingGame();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);